{"version":3,"file":"index.js","sources":["../src/js/checkWin.js","../src/js/refs.js","../src/js/createRandomSet.js","../src/js/renderCards.js","../src/main.js"],"sourcesContent":["export function checkWin(cardField) {\n  const res = [...cardField.children].every(el =>\n    el.classList.contains('found')\n  );\n  return res;\n}\n","export const refs = {\n  cards: document.querySelector('.js-cards'),\n  startBtn: document.querySelector('.start-btn'),\n  gameTimeField: document.querySelector('.game-time'),\n  stepsField: document.querySelector('.steps'),\n};\n","export function createRandomSet(amount) {\n  const data = [];\n\n  for (let index = 0; index < amount / 2; index++) {\n    data.push(index, index);\n  }\n  const rendomData = [];\n\n  while (rendomData.length < amount) {\n    const randomIdx = getRandom(data.length);\n    const randomEl = data[randomIdx];\n    data.splice(randomIdx, 1);\n    rendomData.push(randomEl);\n  }\n\n  return rendomData;\n}\n\nfunction getRandom(num) {\n  return Math.floor(Math.random() * num);\n}\n","import { createRandomSet } from './createRandomSet';\nimport { refs } from './refs';\n// import svgImages from './data/svg_images.json';\nconst emoji = [\n  '\\u{1F41F}',\n  '\\u{1F996}',\n  '\\u{1F980}',\n  '\\u{1F427}',\n  '\\u{1F425}',\n  '\\u{1F525}',\n  '\\u{1F41E}',\n  '\\u{1F989}',\n  '\\u{1F416}',\n  '\\u{1F422}',\n  '\\u{1F991}',\n  '\\u{1F99C}',\n  '\\u{1F99A}',\n  '\\u{1F989}',\n  '\\u{1FAB0}',\n  '\\u{1F42C}',\n  '\\u{1FAB1}',\n  '\\u{1FAB2}',\n  '\\u{1FAB3}',\n  '\\u{1FAB4}',\n  '\\u{1FAB5}',\n  '\\u{1FAB6}',\n  '\\u{1FAB7}',\n  '\\u{1FAB8}',\n  '\\u{1FAB9}',\n  '\\u{1FABA}',\n  '\\u{1FABB}',\n  '\\u{1FABC}',\n  '\\u{1FABD}',\n  '\\u{1FABE}',\n  '\\u{1FABF}',\n  '\\u{1FAC0}',\n];\n// console.log(svgImages);\n// ${svgImages[item].svg}\n\nexport function renderCards(amount = 12) {\n  const cardSet = createRandomSet(amount);\n  const markup = cardSet\n    .map(\n      item => `<div class=\"card\" data-id=${item}>\n      ${emoji[item]}\n  </div>`\n    )\n    .join('');\n  refs.cards.innerHTML = markup;\n}\n","import { Timer, TimerOptions, Time } from 'timer-node';\n\nimport { checkWin } from './js/checkWin';\nimport { refs } from './js/refs';\nimport { renderCards } from './js/renderCards';\n\nlet firstOpenedCard = null;\nlet secondOpenedCard = null;\nconst CARDS_AMOUNT = 16;\nconst timer = new Timer();\nlet timerSetIntervatID = null;\nlet stepsAmount = 0;\n\nrefs.cards.addEventListener('click', onCardsClick);\nrefs.startBtn.addEventListener('click', onStartBtnClick);\n\nfunction onStartBtnClick() {\n  renderCards(CARDS_AMOUNT);\n  if (timerSetIntervatID) {\n    clearInterval(timerSetIntervatID);\n    timer.stop();\n  }\n  timer.start();\n  timerSetIntervatID = setInterval(() => {\n    const min = String(timer.time().m).padStart(2, '0');\n    const sec = String(timer.time().s).padStart(2, '0');\n    refs.gameTimeField.textContent = `${min}:${sec}`;\n  }, 1000);\n}\n\nfunction onCardsClick({ target, currentTarget }) {\n  if (target === currentTarget) return;\n  if (firstOpenedCard && secondOpenedCard) return;\n  if (target === firstOpenedCard) return;\n  if (target.classList.contains('found')) return;\n\n  stepsAmount += 1;\n  refs.stepsField.textContent = stepsAmount;\n  showCard(target);\n\n  if (!firstOpenedCard) {\n    firstOpenedCard = target;\n    return;\n  }\n  secondOpenedCard = target;\n\n  if (secondOpenedCard.dataset.id === firstOpenedCard.dataset.id) {\n    makeCardFound(secondOpenedCard);\n    makeCardFound(firstOpenedCard);\n    firstOpenedCard = null;\n    secondOpenedCard = null;\n\n    if (checkWin(refs.cards)) {\n      refs.cards.innerHTML = `<div>\n        <h1>You WIN</h1>\n        <p>Time: ${refs.gameTimeField.textContent}</p>\n        <p>Steps: ${stepsAmount}</p>\n        </div`;\n      clearInterval(timerSetIntervatID);\n      timer.stop();\n      refs.gameTimeField.textContent = '00:00';\n      stepsAmount = 0;\n      refs.stepsField.textContent = stepsAmount;\n\n      // setTimeout(() => {\n      //   refs.cards.innerHTML = `<div>\n      //   <h1>You WIN</h1>\n      //   <p>Time: ${refs.gameTimeField.textContent}</p>\n      //   <p>Steps: ${stepsAmount}</p>\n      //   </div`;\n      //   clearInterval(timerSetIntervatID);\n      //   timer.stop();\n      //   refs.gameTimeField.textContent = '00:00';\n      //   stepsAmount = 0;\n      //   refs.stepsField.textContent = stepsAmount;\n      // }, 500);\n    }\n    return;\n  }\n\n  closeCards();\n}\n\nfunction closeCards() {\n  setTimeout(() => {\n    firstOpenedCard.classList.remove('shown');\n    secondOpenedCard.classList.remove('shown');\n    firstOpenedCard = null;\n    secondOpenedCard = null;\n  }, 500);\n}\n\nfunction showCard(target) {\n  target.classList.add('shown');\n}\n\nfunction makeCardFound(target) {\n  target.classList.add('found');\n}\n"],"names":["checkWin","cardField","el","refs","createRandomSet","amount","data","index","rendomData","randomIdx","getRandom","randomEl","num","emoji","renderCards","markup","item","firstOpenedCard","secondOpenedCard","CARDS_AMOUNT","timer","Timer","timerSetIntervatID","stepsAmount","onCardsClick","onStartBtnClick","min","sec","target","currentTarget","showCard","makeCardFound","closeCards"],"mappings":"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"}