{"version":3,"file":"index.js","sources":["../src/js/createRandomSet.js","../src/js/refs.js","../src/js/renderCards.js","../src/main.js"],"sourcesContent":["export function createRandomSet(amount) {\n  const data = [];\n\n  for (let index = 0; index < amount / 2; index++) {\n    data.push(index, index);\n  }\n  const rendomData = [];\n\n  while (rendomData.length < amount) {\n    const randomIdx = getRandom(data.length);\n    const randomEl = data[randomIdx];\n    data.splice(randomIdx, 1);\n    rendomData.push(randomEl);\n  }\n\n  return rendomData;\n}\n\nfunction getRandom(num) {\n  return Math.floor(Math.random() * num);\n}\n","export const refs = {\n  cards: document.querySelector('.js-cards'),\n};\n","import { createRandomSet } from './createRandomSet';\nimport { refs } from './refs';\n\nexport function renderCards() {\n  const cardSet = createRandomSet(12);\n  const markup = cardSet\n    .map(item => `<div class=\"card\" data-id=${item}>${item}</div>`)\n    .join('');\n  refs.cards.innerHTML = markup;\n}\n","import { createRandomSet } from './js/createRandomSet';\nimport { refs } from './js/refs';\nimport { renderCards } from './js/renderCards';\n\n// console.log(createRandomSet(16));\nlet firstOpenedCard = null;\n\nrefs.cards.addEventListener('click', onCardsClick);\nrenderCards();\n\nfunction onCardsClick(evt) {\n  if (evt.target === evt.currentTarget) return;\n  if (evt.target === firstOpenedCard) return;\n  if (evt.target.classList.contains('found')) return;\n\n  const target = evt.target;\n  showCard(target);\n\n  if (!firstOpenedCard) {\n    firstOpenedCard = target;\n    target.classList.add('shown');\n    return;\n  }\n\n  if (target.dataset.id === firstOpenedCard.dataset.id) {\n    makeCardFound(target);\n    makeCardFound(firstOpenedCard);\n    firstOpenedCard = null;\n\n    console.log('bingo');\n    return;\n  }\n\n  closeCard(target);\n  closeCard(firstOpenedCard);\n  firstOpenedCard = null;\n\n  //   console.log(target.dataset.id);\n}\n\nfunction closeCard(target) {\n  //   target.classList.remove('shown');\n  setInterval(() => target.classList.remove('shown'), 500);\n}\n\nfunction showCard(target) {\n  target.classList.add('shown');\n}\n\nfunction makeCardFound(target) {\n  target.classList.add('found');\n}\n"],"names":["createRandomSet","amount","data","index","rendomData","randomIdx","getRandom","randomEl","num","refs","renderCards","markup","item","firstOpenedCard","onCardsClick","evt","target","showCard","makeCardFound","closeCard"],"mappings":"ssBAAO,SAASA,EAAgBC,EAAQ,CACtC,MAAMC,EAAO,CAAA,EAEb,QAASC,EAAQ,EAAGA,EAAQF,EAAS,EAAGE,IACtCD,EAAK,KAAKC,EAAOA,CAAK,EAExB,MAAMC,EAAa,CAAA,EAEnB,KAAOA,EAAW,OAASH,GAAQ,CACjC,MAAMI,EAAYC,EAAUJ,EAAK,MAAM,EACjCK,EAAWL,EAAKG,CAAS,EAC/BH,EAAK,OAAOG,EAAW,CAAC,EACxBD,EAAW,KAAKG,CAAQ,CACzB,CAED,OAAOH,CACT,CAEA,SAASE,EAAUE,EAAK,CACtB,OAAO,KAAK,MAAM,KAAK,OAAQ,EAAGA,CAAG,CACvC,CCpBO,MAAMC,EAAO,CAClB,MAAO,SAAS,cAAc,WAAW,CAC3C,ECCO,SAASC,GAAc,CAE5B,MAAMC,EADUX,EAAgB,EAAE,EAE/B,IAAIY,GAAQ,6BAA6BA,CAAI,IAAIA,CAAI,QAAQ,EAC7D,KAAK,EAAE,EACVH,EAAK,MAAM,UAAYE,CACzB,CCJA,IAAIE,EAAkB,KAEtBJ,EAAK,MAAM,iBAAiB,QAASK,CAAY,EACjDJ,IAEA,SAASI,EAAaC,EAAK,CAGzB,GAFIA,EAAI,SAAWA,EAAI,eACnBA,EAAI,SAAWF,GACfE,EAAI,OAAO,UAAU,SAAS,OAAO,EAAG,OAE5C,MAAMC,EAASD,EAAI,OAGnB,GAFAE,EAASD,CAAM,EAEX,CAACH,EAAiB,CACpBA,EAAkBG,EAClBA,EAAO,UAAU,IAAI,OAAO,EAC5B,MACD,CAED,GAAIA,EAAO,QAAQ,KAAOH,EAAgB,QAAQ,GAAI,CACpDK,EAAcF,CAAM,EACpBE,EAAcL,CAAe,EAC7BA,EAAkB,KAElB,QAAQ,IAAI,OAAO,EACnB,MACD,CAEDM,EAAUH,CAAM,EAChBG,EAAUN,CAAe,EACzBA,EAAkB,IAGpB,CAEA,SAASM,EAAUH,EAAQ,CAEzB,YAAY,IAAMA,EAAO,UAAU,OAAO,OAAO,EAAG,GAAG,CACzD,CAEA,SAASC,EAASD,EAAQ,CACxBA,EAAO,UAAU,IAAI,OAAO,CAC9B,CAEA,SAASE,EAAcF,EAAQ,CAC7BA,EAAO,UAAU,IAAI,OAAO,CAC9B"}